name: Build and Push Docker Images

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'Dockerfile.*'
      - 'entrypoint.sh'
      - '.github/workflows/docker-build-push.yml'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'Dockerfile.*'
      - 'entrypoint.sh'
      - '.github/workflows/docker-build-push.yml'
  schedule:
    # Run weekly on Monday at 00:00 UTC to rebuild with latest security updates
    - cron: '0 0 * * 1'
  workflow_dispatch:

env:
  DOCKER_NAMESPACE: vtemian
  IMAGE_NAME: debuilder

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: [bionic, focal, jammy, noble]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.ubuntu-version }}
            type=raw,value=${{ matrix.ubuntu-version }}-{{date 'YYYYMMDD'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.ubuntu-version }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-dockerhub-description:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_NAMESPACE }}/${{ env.IMAGE_NAME }}
          short-description: "Docker containers for building Debian packages across multiple Ubuntu distributions"
          readme-filepath: ./README.md